local DioHub = {}
DioHub.__index = DioHub

-- Library constructor
function DioHub.new(title, version, gameId)
    local self = setmetatable({}, DioHub)
    
    -- Create main screen GUI
    self.player = game.Players.LocalPlayer
    self.playerGui = self.player:WaitForChild("PlayerGui")
    
    self.screenGui = Instance.new("ScreenGui")
    self.screenGui.Name = "DioHub"
    self.screenGui.Parent = self.playerGui
    
    -- Main window frame
    self.mainFrame = Instance.new("Frame")
    self.mainFrame.Size = UDim2.new(0.4, 0, 0.6, 0)
    self.mainFrame.Position = UDim2.new(0.3, 0, 0.2, 0)
    self.mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    self.mainFrame.BorderSizePixel = 0
    self.mainFrame.Parent = self.screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = self.mainFrame
    
    -- Title bar
    self.titleBar = Instance.new("Frame")
    self.titleBar.Size = UDim2.new(1, 0, 0.08, 0)
    self.titleBar.Position = UDim2.new(0, 0, 0, 0)
    self.titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    self.titleBar.BorderSizePixel = 0
    self.titleBar.Parent = self.mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 6)
    titleCorner.Parent = self.titleBar
    
    -- Title text
    self.titleLabel = Instance.new("TextLabel")
    self.titleLabel.Size = UDim2.new(0.7, 0, 1, 0)
    self.titleLabel.Position = UDim2.new(0.05, 0, 0, 0)
    self.titleLabel.BackgroundTransparency = 1
    self.titleLabel.Text = title.." | "..version
    self.titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    self.titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    self.titleLabel.Font = Enum.Font.GothamBold
    self.titleLabel.TextSize = 14
    self.titleLabel.Parent = self.titleBar
    
    -- Close button
    self.closeButton = Instance.new("TextButton")
    self.closeButton.Size = UDim2.new(0.08, 0, 0.6, 0)
    self.closeButton.Position = UDim2.new(0.9, 0, 0.2, 0)
    self.closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    self.closeButton.Text = "X"
    self.closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    self.closeButton.Parent = self.titleBar
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 4)
    closeCorner.Parent = self.closeButton
    
    self.closeButton.MouseButton1Click:Connect(function()
        self.screenGui:Destroy()
    end)
    
    -- Tab container
    self.tabContainer = Instance.new("Frame")
    self.tabContainer.Size = UDim2.new(1, 0, 0.08, 0)
    self.tabContainer.Position = UDim2.new(0, 0, 0.08, 0)
    self.tabContainer.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    self.tabContainer.BorderSizePixel = 0
    self.tabContainer.Parent = self.mainFrame
    
    -- Content area
    self.contentFrame = Instance.new("Frame")
    self.contentFrame.Size = UDim2.new(1, 0, 0.84, 0)
    self.contentFrame.Position = UDim2.new(0, 0, 0.16, 0)
    self.contentFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    self.contentFrame.BorderSizePixel = 0
    self.contentFrame.Parent = self.mainFrame
    
    local contentCorner = Instance.new("UICorner")
    contentCorner.CornerRadius = UDim.new(0, 6)
    contentCorner.Parent = self.contentFrame
    
    -- Initialize tabs
    self.tabs = {}
    self.currentTab = nil
    
    return self
end

-- Tab creation method
function DioHub:CreateTab(tabName)
    local tab = {}
    
    -- Create tab button
    tab.button = Instance.new("TextButton")
    tab.button.Size = UDim2.new(0.15, 0, 0.8, 0)
    tab.button.Position = UDim2.new(0.05 + (#self.tabs * 0.16), 0, 0.1, 0)
    tab.button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tab.button.Text = tabName
    tab.button.TextColor3 = Color3.fromRGB(255, 255, 255)
    tab.button.Parent = self.tabContainer
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 4)
    buttonCorner.Parent = tab.button
    
    -- Create content frame
    tab.content = Instance.new("ScrollingFrame")
    tab.content.Size = UDim2.new(1, -10, 1, -10)
    tab.content.Position = UDim2.new(0, 5, 0, 5)
    tab.content.BackgroundTransparency = 1
    tab.content.Visible = false
    tab.content.ScrollBarThickness = 5
    tab.content.AutomaticCanvasSize = Enum.AutomaticSize.Y
    tab.content.CanvasSize = UDim2.new(0, 0, 0, 0)
    tab.content.Parent = self.contentFrame
    
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 5)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Parent = tab.content
    
    -- Tab switching logic
    tab.button.MouseButton1Click:Connect(function()
        if self.currentTab then
            self.currentTab.content.Visible = false
        end
        self.currentTab = tab
        tab.content.Visible = true
    end)
    
    -- Frame creation method for this tab
    function tab:CreateFrame(frameName)
        local frame = {}
        
        -- Create section label
        frame.label = Instance.new("TextLabel")
        frame.label.Size = UDim2.new(1, -10, 0, 30)
        frame.label.Position = UDim2.new(0, 5, 0, 0)
        frame.label.BackgroundTransparency = 1
        frame.label.Text = frameName
        frame.label.TextColor3 = Color3.fromRGB(255, 255, 255)
        frame.label.TextXAlignment = Enum.TextXAlignment.Left
        frame.label.Font = Enum.Font.GothamBold
        frame.label.TextSize = 16
        frame.label.Parent = tab.content
        
        -- Button creation method for this frame
        function frame:CreateButton(buttonName, description, callback)
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, -10, 0, 40)
            button.Position = UDim2.new(0, 5, 0, 0)
            button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            button.AutoButtonColor = false
            button.Parent = tab.content
            
            local buttonCorner = Instance.new("UICorner")
            buttonCorner.CornerRadius = UDim.new(0, 4)
            buttonCorner.Parent = button
            
            -- Button title
            local title = Instance.new("TextLabel")
            title.Size = UDim2.new(0.7, 0, 0.6, 0)
            title.Position = UDim2.new(0.05, 0, 0.1, 0)
            title.BackgroundTransparency = 1
            title.Text = buttonName
            title.TextColor3 = Color3.fromRGB(255, 255, 255)
            title.TextXAlignment = Enum.TextXAlignment.Left
            title.Font = Enum.Font.GothamBold
            title.TextSize = 14
            title.Parent = button
            
            -- Button description
            local desc = Instance.new("TextLabel")
            desc.Size = UDim2.new(0.7, 0, 0.4, 0)
            desc.Position = UDim2.new(0.05, 0, 0.55, 0)
            desc.BackgroundTransparency = 1
            desc.Text = description
            desc.TextColor3 = Color3.fromRGB(200, 200, 200)
            desc.TextXAlignment = Enum.TextXAlignment.Left
            desc.Font = Enum.Font.Gotham
            desc.TextSize = 12
            desc.Parent = button
            
            -- Button hover effects
            button.MouseEnter:Connect(function()
                button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
            end)
            
            button.MouseLeave:Connect(function()
                button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            end)
            
            -- Button click action
            button.MouseButton1Click:Connect(function()
                pcall(callback)
            end)
            
            return button
        end
        
        return frame
    end
    
    -- Activate first tab by default
    if #self.tabs == 0 then
        self.currentTab = tab
        tab.content.Visible = true
    end
    
    table.insert(self.tabs, tab)
    return tab
end
