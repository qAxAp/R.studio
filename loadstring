local player = game:GetService("Players").LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local tweenService = game:GetService("TweenService")
local userInputService = game:GetService("UserInputService")

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playerGui
screenGui.DisplayOrder = 10

local frame1 = Instance.new("Frame")
frame1.Size = UDim2.new(0.42970521541950113, 0, 0.548, 0)
frame1.Position = UDim2.new(0.26077097505668934, 0, 0.178, 0)
frame1.BackgroundColor3 = Color3.new(0.141, 0.141, 0.141)
frame1.BorderSizePixel = 0
frame1.Parent = screenGui

local frame2 = Instance.new("Frame")
frame2.Size = UDim2.new(0.264172335600907, 0, 0.482, 0)
frame2.Position = UDim2.new(0.41609977324263037, 0, 0.214, 0)
frame2.BackgroundColor3 = Color3.new(0.059, 0.059, 0.059)
frame2.BorderSizePixel = 0
frame2.Parent = screenGui

local frame3 = Instance.new("Frame")
frame3.Size = UDim2.new(0.42970521541950113, 0, 0.068, 0)
frame3.Position = UDim2.new(0.26077097505668934, 0, 0.132, 0)
frame3.BackgroundColor3 = Color3.new(0.059, 0.059, 0.059)
frame3.BorderSizePixel = 0
frame3.Parent = screenGui

local frame4 = Instance.new("Frame")
frame4.Size = UDim2.new(0.1383219954648526, 0, 0.484, 0)
frame4.Position = UDim2.new(0.2698412698412698, 0, 0.214, 0)
frame4.BackgroundColor3 = Color3.new(0.059, 0.059, 0.059)
frame4.BorderSizePixel = 0
frame4.Parent = screenGui

local corner1 = Instance.new("UICorner", frame1)
corner1.CornerRadius = UDim.new(0, 6)
local corner2 = Instance.new("UICorner", frame2)
corner2.CornerRadius = UDim.new(0, 6)
local corner3 = Instance.new("UICorner", frame3)
corner3.CornerRadius = UDim.new(0, 6)
local corner4 = Instance.new("UICorner", frame4)
corner4.CornerRadius = UDim.new(0, 2)

local titleLabel = Instance.new("TextLabel", frame3)
titleLabel.Size = UDim2.new(0.8, 0, 1, 0)  
titleLabel.Position = UDim2.new(0.05, 0, 0, 0)  
titleLabel.BackgroundTransparency = 1  
titleLabel.Text = "CryoNova | V1"  
titleLabel.TextColor3 = Color3.new(1, 1, 1)  
titleLabel.TextSize = 14  
titleLabel.TextXAlignment = Enum.TextXAlignment.Left  
titleLabel.Font = Enum.Font.GothamBlack  

local closeButton = Instance.new("TextButton", frame3)
closeButton.Size = UDim2.new(0, 15, 0, 15)
closeButton.Position = UDim2.new(0.95, 0, 0.5, -7.5)
closeButton.BackgroundColor3 = Color3.new(1, 0, 0)
closeButton.Text = ""
Instance.new("UICorner", closeButton).CornerRadius = UDim.new(1, 0)

closeButton.MouseButton1Click:Connect(function() 
    if infiniteJumpConnection then infiniteJumpConnection:Disconnect() end
    screenGui:Destroy() 
end)

local minimizeButton = Instance.new("TextButton", frame3)
minimizeButton.Size = UDim2.new(0, 15, 0, 15)
minimizeButton.Position = UDim2.new(0.9, 0, 0.5, -7.5)
minimizeButton.BackgroundColor3 = Color3.new(1, 1, 0)
minimizeButton.Text = ""
Instance.new("UICorner", minimizeButton).CornerRadius = UDim.new(1, 0)

local tabsScrollingFrame = Instance.new("ScrollingFrame", frame4)
tabsScrollingFrame.Size = UDim2.new(0.9, 0, 0.9, 0)
tabsScrollingFrame.Position = UDim2.new(0.05, 0, 0.05, 0)
tabsScrollingFrame.BackgroundTransparency = 1
tabsScrollingFrame.ScrollBarThickness = 5
tabsScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y

local tabsListLayout = Instance.new("UIListLayout", tabsScrollingFrame)
tabsListLayout.FillDirection = Enum.FillDirection.Vertical
tabsListLayout.Padding = UDim.new(0, 5)

tabsListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    tabsScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, tabsListLayout.AbsoluteContentSize.Y + 10)
end)

local loadstringScrollingFrame = Instance.new("ScrollingFrame", frame2)
loadstringScrollingFrame.Size = UDim2.new(0.9, 0, 0.9, 0) 
loadstringScrollingFrame.Position = UDim2.new(0.05, 0, 0.05, 0)
loadstringScrollingFrame.BackgroundTransparency = 1
loadstringScrollingFrame.ScrollBarThickness = 8 
loadstringScrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
loadstringScrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y
loadstringScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0) 

local padding = Instance.new("UIPadding", loadstringScrollingFrame)
padding.PaddingBottom = UDim.new(0, 20)

local gameScripts = {
    ["Blox Fruits"] = {
        {Name = "Nova Hub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Nova-OP/NovaHub/main/NovaHubLoader.lua'))()"},
        {Name = "Titan Hub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Titan-OP/TitanHub/main/BloxFruits.lua'))()"},
        {Name = "Blaze X", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/BlazeX-Official/BlazeX/main/BloxFruits.lua'))()"},
        {Name = "Sea Hub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/SeaHub/SeaHub/main/BloxFruits.lua'))()"},
        {Name = "V.G Hub Fork", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Muhammad6196/Project-WD/main/Main.lua'))()"}
    },
    ["Brookhaven RP"] = {
        {Name = "Hydrogen", Script = "loadstring(game:HttpGet('https://hydrogen.gg/scripts/main.lua'))()"},
        {Name = "DarkHub", Script = "loadstring(game:HttpGet('https://darkhub.xyz/scripts/Brookhaven.lua'))()"},
        {Name = "Vynixu", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Vynixu/Scripts/main/Brookhaven.lua'))()"},
        {Name = "Nebula Hub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Nebula-Hub/Nebula/main/Brookhaven.lua'))()"},
        {Name = "Celestial X", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/CelestialHub/Celestial/main/Brookhaven.lua'))()"}
    },
    ["Pet Simulator 99"] = {
        {Name = "OP Pet Sim 99", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/OP-PetSim/OP-PetSim99/main/Main.lua'))()"},
        {Name = "Milk Up", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Milk-Up/Milk-Up/main/PetSim99.lua'))()"},
        {Name = "Titan Pet Sim", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Titan-OP/Titan-PetSim/main/Main.lua'))()"},
        {Name = "Nebula PS99", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Nebula-Hub/Nebula/main/PetSim99.lua'))()"},
        {Name = "Void Hub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/VoidHub/VoidHub/main/PetSim99.lua'))()"}
    },
    ["Arsenal"] = {
        {Name = "Void X", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/VoidHub/VoidHub/main/Arsenal.lua'))()"},
        {Name = "Omega X", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/OmegaX-Hub/OmegaX/main/Arsenal.lua'))()"},
        {Name = "DarkHub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkHub/DarkHub/main/Arsenal.lua'))()"},
        {Name = "Nexus", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/NexusHub/Nexus/main/Arsenal.lua'))()"},
        {Name = "DioHub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/qAxAp/Arsenal-Aimbot/refs/heads/main/Aimbott'))()"}
    },
    ["Murder Mystery 2"] = {
        {Name = "MM2 Godmode", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/MM2Scripts/MM2Scripts/main/Godmode.lua'))()"},
        {Name = "Vynixu", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Vynixu/Scripts/main/MM2.lua'))()"},
        {Name = "DarkHub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkHub/DarkHub/main/MM2.lua'))()"},
        {Name = "Nebula", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Nebula-Hub/Nebula/main/MM2.lua'))()"},
        {Name = "Eclipse", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/EclipseHub/Eclipse/main/MM2.lua'))()"}
    },
    ["Adopt Me!"] = {
        {Name = "OP Adopt Me", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/OP-AdoptMe/OP-AdoptMe/main/Main.lua'))()"},
        {Name = "Milk Up", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Milk-Up/Milk-Up/main/AdoptMe.lua'))()"},
        {Name = "Nebula", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Nebula-Hub/Nebula/main/AdoptMe.lua'))()"},
        {Name = "Titan", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Titan-OP/Titan-AdoptMe/main/Main.lua'))()"},
        {Name = "VoidHub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/VoidHub/VoidHub/main/AdoptMe.lua'))()"}
    },
    ["BedWars"] = {
        {Name = "Void X", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/VoidHub/VoidHub/main/BedWars.lua'))()"},
        {Name = "DarkHub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkHub/DarkHub/main/BedWars.lua'))()"},
        {Name = "Nexus", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/NexusHub/Nexus/main/BedWars.lua'))()"},
        {Name = "Eclipse", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/EclipseHub/Eclipse/main/BedWars.lua'))()"},
        {Name = "Celestial", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/CelestialHub/Celestial/main/BedWars.lua'))()"}
    },
    ["Rainbow Friends"] = {
        {Name = "RF OP Script", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/RF-Scripts/RF-Scripts/main/OP.lua'))()"},
        {Name = "Hydrogen", Script = "loadstring(game:HttpGet('https://hydrogen.gg/scripts/RainbowFriends.lua'))()"},
        {Name = "DarkHub", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkHub/DarkHub/main/RainbowFriends.lua'))()"},
        {Name = "Nebula", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Nebula-Hub/Nebula/main/RainbowFriends.lua'))()"},
        {Name = "Vynixu", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/Vynixu/Scripts/main/RainbowFriends.lua'))()"}
    },
    ["Universal"] = {
        {Name = "Infinite Yield", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()"},
        {Name = "Nameless admin", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source'))()"},
        {Name = "Fly gui", Script = "loadstring(game:HttpGet('https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt'))()"},
    }
}

local function createGameDropdowns()
    for _, child in ipairs(loadstringScrollingFrame:GetChildren()) do
        if child:IsA("TextButton") or child:IsA("Frame") then
            child:Destroy()
        end
    end
    
    local scrollingFrameLayout = Instance.new("UIListLayout")
    scrollingFrameLayout.FillDirection = Enum.FillDirection.Vertical
    scrollingFrameLayout.Padding = UDim.new(0, 10) 
    scrollingFrameLayout.Parent = loadstringScrollingFrame
    
    scrollingFrameLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        loadstringScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, scrollingFrameLayout.AbsoluteContentSize.Y + 10)
    end)

    local gameNames = {
        "Blox Fruits", "Brookhaven RP", "Pet Simulator 99", 
        "Arsenal", "Murder Mystery 2", 
        "Adopt Me!", "BedWars", "Rainbow Friends", "Universal", "Coming soon..", "Coming soon..",
    }

    local allDropdowns = {}

    for _, gameName in ipairs(gameNames) do
        local dropdownContainer = Instance.new("Frame")
        dropdownContainer.Size = UDim2.new(1, -10, 0, 35)
        dropdownContainer.BackgroundTransparency = 1
        dropdownContainer.Parent = loadstringScrollingFrame
        table.insert(allDropdowns, dropdownContainer)

        local dropdownButton = Instance.new("TextButton")
        dropdownButton.Size = UDim2.new(1, 0, 1, 0)
        dropdownButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        dropdownButton.Text = "  "..gameName
        dropdownButton.TextColor3 = Color3.new(1, 1, 1)
        dropdownButton.TextSize = 12
        dropdownButton.TextXAlignment = Enum.TextXAlignment.Left
        dropdownButton.ZIndex = 2
        dropdownButton.Parent = dropdownContainer

        local dropdownCorner = Instance.new("UICorner")
        dropdownCorner.CornerRadius = UDim.new(0, 4)
        dropdownCorner.Parent = dropdownButton

        local arrow = Instance.new("ImageLabel")
        arrow.Name = "Arrow"
        arrow.Size = UDim2.new(0, 12, 0, 12)
        arrow.Position = UDim2.new(1, -25, 0.5, -6)
        arrow.BackgroundTransparency = 1
        arrow.Image = "rbxassetid://71659683"
        arrow.ImageColor3 = Color3.new(1, 1, 1)
        arrow.ZIndex = 2
        arrow.Parent = dropdownButton

        local dropdownContent = Instance.new("Frame")
        dropdownContent.Name = "DropdownContent"
        dropdownContent.Size = UDim2.new(1, 0, 0, 0)
        dropdownContent.Position = UDim2.new(0, 0, 1, 5)
        dropdownContent.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        dropdownContent.BorderSizePixel = 0
        dropdownContent.ClipsDescendants = true
        dropdownContent.ZIndex = 3
        dropdownContent.Parent = dropdownContainer

        local dropdownContentCorner = Instance.new("UICorner")
        dropdownContentCorner.CornerRadius = UDim.new(0, 4)
        dropdownContentCorner.Parent = dropdownContent

        local dropdownContentLayout = Instance.new("UIListLayout")
        dropdownContentLayout.FillDirection = Enum.FillDirection.Vertical
        dropdownContentLayout.Padding = UDim.new(0, 5)
        dropdownContentLayout.Parent = dropdownContent

        dropdownContentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            if dropdownContent.Size.Y.Offset > 0 then
                dropdownContent.Size = UDim2.new(1, 0, 0, dropdownContentLayout.AbsoluteContentSize.Y)
            end
        end)

        local scripts = gameScripts[gameName] or {}
        for _, scriptData in ipairs(scripts) do
            local scriptButton = Instance.new("TextButton")
            scriptButton.Size = UDim2.new(1, -10, 0, 30)
            scriptButton.Position = UDim2.new(0, 5, 0, 0)
            scriptButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            scriptButton.Text = "  "..scriptData.Name
            scriptButton.TextColor3 = Color3.new(1, 1, 1)
            scriptButton.TextSize = 11
            scriptButton.TextXAlignment = Enum.TextXAlignment.Left
            scriptButton.ZIndex = 4
            scriptButton.Parent = dropdownContent

            local scriptButtonCorner = Instance.new("UICorner")
            scriptButtonCorner.CornerRadius = UDim.new(0, 4)
            scriptButtonCorner.Parent = scriptButton

            scriptButton.MouseButton1Click:Connect(function()
                loadstring(scriptData.Script)()
            end)
        end

        dropdownButton.MouseButton1Click:Connect(function()
            for _, otherDropdown in ipairs(allDropdowns) do
                if otherDropdown ~= dropdownContainer then
                    local content = otherDropdown:FindFirstChild("DropdownContent")
                    if content then
                        content.Size = UDim2.new(1, 0, 0, 0)
                        local arrow = otherDropdown:FindFirstChild("Arrow", true)
                        if arrow then
                            arrow.Rotation = 0
                        end
                    end
                end
            end

            local isOpen = dropdownContent.Size.Y.Offset > 0
            if isOpen then
                dropdownContent:TweenSize(
                    UDim2.new(1, 0, 0, 0),
                    Enum.EasingDirection.Out,
                    Enum.EasingStyle.Quad,
                    0.2,
                    true
                )
                arrow.Rotation = 0
            else
                task.wait()
                dropdownContent:TweenSize(
                    UDim2.new(1, 0, 0, dropdownContentLayout.AbsoluteContentSize.Y),
                    Enum.EasingDirection.Out,
                    Enum.EasingStyle.Quad,
                    0.2,
                    true
                )
                arrow.Rotation = 180
            end
        end)
    end
end

local function createTab(name)
    local tab = Instance.new("TextButton")
    tab.Size = UDim2.new(1, -5, 0, 30)  
    tab.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
    tab.Text = name
    tab.TextColor3 = Color3.new(1, 1, 1)
    tab.TextSize = 12
    tab.Parent = tabsScrollingFrame  
    
    local corner = Instance.new("UICorner", tab)
    corner.CornerRadius = UDim.new(0, 4)
    
    return tab
end

local mainTabButton = createTab("Main")
local gamesTabButton = createTab("Games")
local playerTabButton = createTab("Player")  -- Renamed from Settings to Player
local updatesTabButton = createTab("Updates")  

local mainPanel = Instance.new("Frame", frame2)
mainPanel.Size = UDim2.new(0.9, 0, 0.9, 0)
mainPanel.Position = UDim2.new(0.05, 0, 0.05, 0)
mainPanel.BackgroundTransparency = 1
mainPanel.Visible = true
Instance.new("UIListLayout", mainPanel).FillDirection = Enum.FillDirection.Vertical

loadstringScrollingFrame.Visible = false

local welcomeLabel = Instance.new("TextLabel", mainPanel)
welcomeLabel.Size = UDim2.new(1, 0, 0, 50)
welcomeLabel.BackgroundTransparency = 1
welcomeLabel.Text = "Welcome to CryoNova V1"
welcomeLabel.TextColor3 = Color3.new(1, 1, 1)
welcomeLabel.TextSize = 18
welcomeLabel.Font = Enum.Font.GothamBlack

local descriptionLabel = Instance.new("TextLabel", mainPanel)
descriptionLabel.Size = UDim2.new(1, 0, 0, 100)
descriptionLabel.BackgroundTransparency = 1
descriptionLabel.Text = "Welcome to CryoNova, the script hub you have been searching for. Dive in and enjoy the experience!"
descriptionLabel.TextColor3 = Color3.new(1, 1, 1)
descriptionLabel.TextSize = 8
descriptionLabel.TextWrapped = true
welcomeLabel.Font = Enum.Font.GothamBold
descriptionLabel.TextYAlignment = Enum.TextYAlignment.Top

local playerPanel = Instance.new("Frame", frame2)  -- Changed from settingsPanel to playerPanel
playerPanel.Size = UDim2.new(0.9, 0, 0.9, 0)
playerPanel.Position = UDim2.new(0.05, 0, 0.05, 0)
playerPanel.BackgroundTransparency = 1
playerPanel.Visible = false
Instance.new("UIListLayout", playerPanel).FillDirection = Enum.FillDirection.Vertical

local userPanel = Instance.new("Frame", frame2)
userPanel.Size = UDim2.new(0.9, 0, 0.9, 0)
userPanel.Position = UDim2.new(0.05, 0, 0.05, 0)
userPanel.BackgroundTransparency = 1
userPanel.Visible = false

local userLayout = Instance.new("UIListLayout", userPanel)
userLayout.FillDirection = Enum.FillDirection.Vertical
userLayout.Padding = UDim.new(0, 10)

local updatesPanel = Instance.new("Frame", frame2)
updatesPanel.Size = UDim2.new(0.9, 0, 0.9, 0)
updatesPanel.Position = UDim2.new(0.05, 0, 0.05, 0)
updatesPanel.BackgroundTransparency = 1
updatesPanel.Visible = false

local updatesContainer = Instance.new("Frame", updatesPanel)
updatesContainer.Size = UDim2.new(1, 0, 1, 0)
updatesContainer.BackgroundTransparency = 1

local updatesLayout = Instance.new("UIListLayout", updatesContainer)
updatesLayout.FillDirection = Enum.FillDirection.Vertical
updatesLayout.Padding = UDim.new(0, 5) 
updatesLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left

local updatesTitle = Instance.new("TextLabel", updatesContainer)
updatesTitle.Size = UDim2.new(1, 0, 0, 30)
updatesTitle.Text = "Latest Updates"
updatesTitle.TextColor3 = Color3.new(1, 1, 1)
updatesTitle.TextSize = 18
updatesTitle.Font = Enum.Font.GothamBold
updatesTitle.BackgroundTransparency = 1
updatesTitle.TextXAlignment = Enum.TextXAlignment.Left

local update1 = Instance.new("TextLabel", updatesContainer)
update1.Size = UDim2.new(1, -10, 0, 20) 
update1.Text = "[+] Added update tab."
update1.TextColor3 = Color3.new(1, 1, 1)
update1.TextSize = 12
update1.Font = Enum.Font.GothamBold
update1.TextWrapped = true
update1.TextXAlignment = Enum.TextXAlignment.Left
update1.BackgroundTransparency = 1

local update2 = Instance.new("TextLabel", updatesContainer)
update2.Size = UDim2.new(1, -10, 0, 20) 
update2.Text = "[+] Destroy also cleans events."
update2.TextColor3 = Color3.new(1, 1, 1)
update2.TextSize = 12
update2.Font = Enum.Font.GothamBold
update2.TextWrapped = true
update2.TextXAlignment = Enum.TextXAlignment.Left
update2.BackgroundTransparency = 1

-- Moved the player controls to the Player tab
local function createSlider(parent, name, min, max, default, property)
    local container = Instance.new("Frame", parent)
    container.Size = UDim2.new(1, 0, 0, 60)  
    container.BackgroundTransparency = 1
    
    local label = Instance.new("TextLabel", container)
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = UDim2.new(0, 0, 0, 0)  
    label.BackgroundTransparency = 1
    label.Text = name..": "..default
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local slider = Instance.new("Frame", container)
    slider.Size = UDim2.new(1, 0, 0, 20)
    slider.Position = UDim2.new(0, 0, 0, 25)  
    slider.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    Instance.new("UICorner", slider).CornerRadius = UDim.new(0, 4)

    local fill = Instance.new("Frame", slider)
    fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = Color3.fromRGB(7, 217, 0)
    Instance.new("UICorner", fill).CornerRadius = UDim.new(0, 4)

    local button = Instance.new("TextButton", slider)
    button.Size = UDim2.new(1, 0, 1, 0)
    button.BackgroundTransparency = 1
    button.Text = ""

    local currentValue = default
    local isDragging = false

    local function setValue(value)
        currentValue = math.clamp(math.floor(value), min, max)
        local percentage = (currentValue - min) / (max - min)
        tweenService:Create(fill, TweenInfo.new(0.1), {Size = UDim2.new(percentage, 0, 1, 0)}):Play()
        label.Text = name..": "..currentValue
        
        local character = player.Character
        if character and character:FindFirstChildOfClass("Humanoid") then
            character:FindFirstChildOfClass("Humanoid")[property] = currentValue
        end
    end

    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            isDragging = true
            local sliderAbsPos = slider.AbsolutePosition.X
            local sliderAbsSize = slider.AbsoluteSize.X
            local inputX = input.UserInputType == Enum.UserInputType.Touch and input.Position.X or input.Position.X
            local mouseX = math.clamp(inputX, sliderAbsPos, sliderAbsPos + sliderAbsSize)
            local percentage = (mouseX - sliderAbsPos) / sliderAbsSize
            setValue(min + (max - min) * percentage)
        end
    end)

    userInputService.InputChanged:Connect(function(input)
        if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or 
                          input.UserInputType == Enum.UserInputType.Touch) then
            local sliderAbsPos = slider.AbsolutePosition.X
            local sliderAbsSize = slider.AbsoluteSize.X
            local inputX = input.UserInputType == Enum.UserInputType.Touch and input.Position.X or input.Position.X
            local mouseX = math.clamp(inputX, sliderAbsPos, sliderAbsPos + sliderAbsSize)
            local percentage = (mouseX - sliderAbsPos) / sliderAbsSize
            setValue(min + (max - min) * percentage)
        end
    end)

    userInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            isDragging = false
        end
    end)

    player.CharacterAdded:Connect(function(character)
        local humanoid = character:WaitForChildOfClass("Humanoid")
        humanoid[property] = currentValue
    end)
end

-- Create sliders in the Player panel
createSlider(playerPanel, "Walk Speed", 16, 50, 16, "WalkSpeed")
createSlider(playerPanel, "Jump Height", 50, 200, 50, "JumpPower")

-- Infinite Jump Toggle in Player panel
local isInfiniteJumpEnabled = false
local infiniteJumpConnection

local toggleContainer = Instance.new("Frame", playerPanel)
toggleContainer.Size = UDim2.new(1, 0, 0, 30)
toggleContainer.BackgroundTransparency = 1

local toggleButton = Instance.new("TextButton", toggleContainer)
toggleButton.Size = UDim2.new(0, 20, 0, 20)
toggleButton.Position = UDim2.new(0, 0, 0, 5)
toggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
toggleButton.Text = ""
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 4)

local toggleLabel = Instance.new("TextLabel", toggleContainer)
toggleLabel.Size = UDim2.new(1, -25, 1, 0)
toggleLabel.Position = UDim2.new(0, 25, 0, 0)
toggleLabel.BackgroundTransparency = 1
toggleLabel.Text = "Infinite Jump"
toggleLabel.TextColor3 = Color3.new(1, 1, 1)
toggleLabel.TextSize = 12
toggleLabel.TextXAlignment = Enum.TextXAlignment.Left

local function enableInfiniteJump()
    if infiniteJumpConnection then infiniteJumpConnection:Disconnect() end
    infiniteJumpConnection = userInputService.JumpRequest:Connect(function()
        if isInfiniteJumpEnabled then
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end)
end

toggleButton.MouseButton1Click:Connect(function()
    isInfiniteJumpEnabled = not isInfiniteJumpEnabled
    toggleButton.BackgroundColor3 = isInfiniteJumpEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(45, 45, 45)
    if isInfiniteJumpEnabled then
        enableInfiniteJump()
    elseif infiniteJumpConnection then
        infiniteJumpConnection:Disconnect()
    end
end)

player.CharacterAdded:Connect(function()
    if isInfiniteJumpEnabled then enableInfiniteJump() end
end)

updatesTabButton.MouseButton1Click:Connect(function()
    mainPanel.Visible = false
    loadstringScrollingFrame.Visible = false
    userPanel.Visible = false
    playerPanel.Visible = false
    updatesPanel.Visible = true
end)

mainTabButton.MouseButton1Click:Connect(function()
    mainPanel.Visible = true
    loadstringScrollingFrame.Visible = false
    userPanel.Visible = false
    playerPanel.Visible = false
    updatesPanel.Visible = false  
end)

gamesTabButton.MouseButton1Click:Connect(function()
    mainPanel.Visible = false
    loadstringScrollingFrame.Visible = true
    userPanel.Visible = false
    playerPanel.Visible = false
    updatesPanel.Visible = false  
    createGameDropdowns()
end)

userTabButton.MouseButton1Click:Connect(function()
    mainPanel.Visible = false
    loadstringScrollingFrame.Visible = false
    userPanel.Visible = true
    playerPanel.Visible = false
    updatesPanel.Visible = false  
end)

playerTabButton.MouseButton1Click:Connect(function()
    mainPanel.Visible = false
    loadstringScrollingFrame.Visible = false
    userPanel.Visible = false
    playerPanel.Visible = true
    updatesPanel.Visible = false  
end)

mainPanel.Visible = true

local draggableFrames = {frame1, frame2, frame3, frame4}
local dragStartPosition = nil
local frameStartPositions = {}
local isDragging = false

local function onInputBegan(input)
    if input.UserInputType == Enum.UserInputType.Touch or 
       input.UserInputType == Enum.UserInputType.MouseButton1 then
        
        if input.UserInputType == Enum.UserInputType.Touch then
            local contextActionService = game:GetService("ContextActionService")
            contextActionService:BindActionAtPriority(
                "BlockCameraMovement",
                function() return Enum.ContextActionResult.Sink end,
                false,
                Enum.ContextActionPriority.High.Value,
                Enum.UserInputType.Touch
            )
        end
        
        dragStartPosition = input.Position
        for _, frame in pairs(draggableFrames) do
            frameStartPositions[frame] = frame.Position
        end
        isDragging = true
        
        if input.UserInputType == Enum.UserInputType.Touch then
            local delta = input.Position - dragStartPosition
            for _, frame in pairs(draggableFrames) do
                local startPos = frameStartPositions[frame]
                frame.Position = UDim2.new(
                    startPos.X.Scale, 
                    startPos.X.Offset + delta.X, 
                    startPos.Y.Scale, 
                    startPos.Y.Offset + delta.Y
                )
            end
        end
    end
end

local function onInputChanged(input)
    if isDragging and dragStartPosition and 
       (input.UserInputType == Enum.UserInputType.Touch or 
        input.UserInputType == Enum.UserInputType.MouseMovement) then
        
        local delta = input.Position - dragStartPosition
        
        for _, frame in pairs(draggableFrames) do
            local startPos = frameStartPositions[frame]
            frame.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X, 
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end
end

local function onInputEnded(input)
    if input.UserInputType == Enum.UserInputType.Touch or 
       input.UserInputType == Enum.UserInputType.MouseButton1 then
        
        if input.UserInputType == Enum.UserInputType.Touch then
            game:GetService("ContextActionService"):UnbindAction("BlockCameraMovement")
        end
        
        isDragging = false
        dragStartPosition = nil
        frameStartPositions = {}
    end
end

frame3.InputBegan:Connect(onInputBegan)
frame3.InputChanged:Connect(onInputChanged)
userInputService.InputEnded:Connect(onInputEnded)

local isMinimized = false
closeButton.MouseButton1Click:Connect(function() screenGui:Destroy() end)
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    frame1.Visible = not isMinimized
    frame2.Visible = not isMinimized
    frame4.Visible = not isMinimized
end)

createGameDropdowns()
